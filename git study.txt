*git-Hub : 
- 채용사이트 : 필수조건 (*깃허브 사용가능한자)
- 면접 : 깃허브
> 버전관리 시스템 & 다른 개발 및 디자이너 협업 툴
> 실습예제 > 혼자서 소화!!!
> 실무자 > x, 협업!!! (*소통 / 혼자서 일)
> 디자이너, 마케터, 영업, 백엔드, 퍼블리셔, 프론트
> 컴퓨터는 거짓말 / 관리하는게 더 속편하다!!

*깃허브 사용하기!!!

1.git-Hub / 레파지토리 생성!!!
- 깃허브 디렉토리(=폴더)
- 데이터 입력.출력!!!

2.내 컴퓨터에서 git을 사용하기 위한 환경설정!!!
- 구글 > git검색
- git-scm > 내 컴퓨터 사양에 맞는 git-version 다운로드 후 설치

3.vscode > 터미널!!!
- 현 시대에 수많은 웹페이지 및 윈도우 화면구성 GUI
(*사용자 매우 편리 방법 / 사용자x)
- GUI 방식 이전에는 모든 컴퓨터 및 프로그래밍 처리는 CLI
- mac북 : 태생부터 지금까지 Linux 강력 os : 보안 / 오픈소스 / 터미널
- window : powershell / git-bash

4.로컬컴퓨터(=내 컴퓨터)에 git정보 등록!!!
- 나의 정보를 가지고 git 데이터 업로드 / 삭제!!!
git config --global user.name Divjason
git config --global user.email sejinpark@tcocs.com

*내 정보가 정상적으로 등록되었는지 확인!!!
git config --list

5.루트 폴더 안에 있는 데이터를 git-hub로 업로드 하기 위해서는
git 폴더를 생성해야한다!!!

git init : 현재 작업중인 루트 폴더에 git-hub와 연결고리가 될 수 있는 git이라는 폴더 신규로 생성해주겠다!!!

6.로컬컴퓨터와 내가 연결해주고싶은 git-hub의 레파지토리를 연결!!!!
git remote add origin https://github.com/Divjason/frontexample231026.git

7.아까 생성해놨던 git이라는 폴더에 git-hub로 업로드하고자 하는 데이터를 이동시켜야 한다!!!!
git add .

8.git 폴더 안에 데이터가 정상적으로 들어왔는지 확인하기 위해서 사용하는 명령어
git status

9.git 폴더에 업로드를 하기 전에 버전생성에 대한 인덱스 만들기
git commit -m "231026"

10.git 폴더에 데이터를 업로드하는 명령어
git push origin master

**실무에서 git-hub를 사용하는 방법

1.git push origin master 입력하기 전,
git checkout -b freshman
(*master가 아닌, freshman이라는 브랜치 폴더를 생성해서 해당 폴더에다가 나의 작업물을 올리기 위한 사전 준비 단계 명령어)

2.git push origin freshman

*git 혹은 git-hub 사용시 나타날 수 있는 오류 메세지 총정리

1.git the requested URL returend error : 403
- 발생상황 : 소스코드 Push할 때, 발생
- 발생이유 : 소스코드 Push 시, 해당 레파지토리 주소에 대한 사용권한이 없기 때문
- 해결방안 : "https://Divjason@github.com/Divjason/github-repository-name.git" => " "는 삭제, github-username & github-repository-name 영역 수정

2.nothing to commit, working tree clean
- 발생상황 : commit 직후 git status 입력 시, 발생
- 발생이유 : 원래 commit 직후 git status 입력 하면 깨끗하다고 나옴

3.git permission denied (publickey)
- 발생이유 : git은 SSH 또는 http 기반으로 사용하게 됨. SSH key로 접속해서 사용하는 경우, 각 PC마다 SSH key등록 필수
- 해결방안 : 터미널에서 ssh-keygen -t rsa -C "[본인의 Github 계정 이메일주소]" 생성 후 Github Setting 메뉴 SSH Key 에서 등록해줌

4.dose not have a commit checked out
- 발생상황 : git add . 입력 시, 발생
- 발생이유 : 로컬컴퓨터의 repository안에 다른 디렉토리(폴더)에 .git이 있기 때문에 발생
- 해결방안 : add를 하고자 하는 폴더 열고, 숨김 폴더 모두 확인 후 하위 폴더 중 .git이 있는 폴더 전부 찾아서 .git 파일 모두 삭제

5.Git remote origin already exists
- 발생상황 : git remote add origin https://github.com/github-username/github-repository-name 입력 시, 발생
- 발생이유 : 기존에 연결되어 있는 Git Hub repository가 있는데, 또 다시 새로운 repository에 소스코드를 올리려고 하면 발생되는 에러
해결방안 : git remote remove origin 명령어 입력 시, 기존 연결되어 있는 repository와 연결해제 가능

6.unable to auto-detect email address
- 발생상황 : git config --global user.email / user.name 입력했음에도 git config --list입력 시, user.email과 user.name이 출력되지 않는 경우
- 발생이유 : git bash 관리자 권한으로 입력하지 않았기 때문

7.![reject] master -> master (fetch first) error: failed to push some refs
- 발생상황 : git push origin master 시, 발생
- 발생이유 : 기존 git hub에 업로드된 파일이 손실 될 수 있어서 나온 메세지
- 해결방안 : 1) git pull origin master
- 해결방안 : 2) git push origin +master

8.fatal: refusing to merge unrelated histories
- 발생상황 : git pull origin master 메세지 입력 시, 발생
- 발생이유 : 애초에 공통되는 commit이 없기 때문에 pull명령어 사용불가
- 해결방안 : git pull origin master --allow-unrelated-histories












