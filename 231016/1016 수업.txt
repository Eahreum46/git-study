1.JS프로그래밍 언어!!
-값을 저장해놓은 공간 개념
-변수(*단일값)
-일반객체(*복수값/텍스트&메서드)
-변칙적인 객체(*배열/문자열객체)

-함수(*function)=기능/(변수 객체 변칙 이 모든것들의 최종적인 목적=함수)
=> 값을 담아놓을 수도 있고, 담겨진 값들을 활용해서 어떤 기능을 구현!

function 함수명(매개변수 (*선택적)=> 인수 혹은 인자값){
  함수 실행문
}


//

변수명, 함수명 => 카멜표기법, 스네이크표기법, 헝가리언표기법
*카멜 -> 낙타 혹처럼_ calcSum
스네이크 -> 나이가 좀 있으신분들_ calc_sum
헝가리언 -> 백엔드진영에서 쓰는 경우_ Calcsum

//


*함수선언 -> 함수호출 -> 함수실행


ex)
function calcSum() {
  let sum = 0;
  for (let i = 1; i <= 10; i++) {
    sum += i;
  }
  console.log(`1부터 10까지 더하면 ${sum}입니다.`);  <- 함수선언
}

calcSum();  <- 함수호출


//


매개변수가 존재하는 함수 선언!

function sum(a, b) {
  let result = a + b;
  alert(`두 수의 합 : ${result}`);
}

sum(1, 2);


//


function calcSum(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += i;
  }
  console.log(`1부터 ${n}까지 더하면 ${sum}입니다.`);
}

calcSum(10);



//*return 중요

let num = parseInt(prompt("몇 까지 더할까요?"));

function calcSum(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += i;
  }
  return sum;
}

document.write(`1부터 ${num}까지 더하면 ${calcSum(num)}`);

////

<3가지 변수>

Scope_전역

local_지역

block_블록

////

// *이름이 없는 익명함수
let sum = function (a, b) {
  return a + b;
};

console.log(`함수 실행 결과: ${sum(10, 20)}`);


//*즉시 실행함수



//자바스크립트 함수 = 1급 시민
//각 언어마다 1급 시민이 있음(C언어, 자바...)
/*
1. 변수에 값을 할당 할 수 있어야 1급 시민
2. 다른 함수의 매개변수 혹은 인자값으로 사용할 수 있어야 1급 시민
3. 다른 함수에서 반환값으로 반환할 수 있어야 한다!!
*/


//호이스팅=hoisting=끌어올리다
*화살표함수는 클래식함수의 결함을 보충해서 나온 문법/ 
 따라서 중복선언에 문제가 생길수있어서 화살표함수에선 호이스팅 기능을 없앰.

//재귀함수

///

값/문자형=> Boolean
값/숫자
값/논리형



